@model IEnumerable<ConversationHistory>
@{
    ViewData["Title"] = "Historique de la conversation";
    var conversationTitle = ViewBag.ConversationTitle?.ToString() ?? "Conversation";
    var conversationId = ViewBag.ConversationId as int?;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2>Historique de la conversation</h2>
                    <h5 class="text-muted">@conversationTitle</h5>
                </div>
                <div class="btn-group">
                    <a asp-action="MyConversations" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Retour aux conversations
                    </a>
                    @if (conversationId.HasValue)
                    {
                        <a asp-action="Index" asp-route-conversationId="@conversationId" class="btn btn-primary">
                            <i class="fas fa-play"></i> Continuer la conversation
                        </a>
                    }
                </div>
            </div>
            
            @if (Model.Any())
            {
                <div class="chat-history-container">
                    <div class="chat-timeline">
                        @foreach (var message in Model)
                        {
                            <div class="timeline-item">
                                <div class="timeline-marker">
                                    <span class="timeline-time">@message.CreatedDate.ToString("HH:mm")</span>
                                </div>
                                
                                <!-- Message utilisateur -->
                                <div class="message-block user-message">
                                    <div class="message-header">
                                        <div class="message-avatar user">
                                            <i class="fas fa-user"></i>
                                        </div>
                                        <div class="message-info">
                                            <strong>Vous</strong>
                                            <span class="message-timestamp">@message.CreatedDate.ToString("dd/MM/yyyy à HH:mm")</span>
                                        </div>
                                    </div>
                                    <div class="message-content user">
                                        @message.Question
                                    </div>
                                </div>
                                
                                <!-- Réponse du bot -->
                                <div class="message-block bot-message">
                                    <div class="message-header">
                                        <div class="message-avatar bot">
                                            <i class="fas fa-robot"></i>
                                        </div>
                                        <div class="message-info">
                                            <strong>Assistant FNZ</strong>
                                            <span class="message-timestamp">@message.CreatedDate.ToString("dd/MM/yyyy à HH:mm")</span>
                                        </div>
                                    </div>
                                    <div class="message-content bot">
                                        @Html.Raw(message.Response.Replace("\n", "<br />"))
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                
                <div class="conversation-stats mt-4">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="stat-card">
                                <i class="fas fa-comments text-primary"></i>
                                <div class="stat-info">
                                    <span class="stat-number">@Model.Count()</span>
                                    <span class="stat-label">Messages échangés</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card">
                                <i class="fas fa-calendar text-success"></i>
                                <div class="stat-info">
                                    <span class="stat-number">@Model.First().CreatedDate.ToString("dd/MM/yyyy")</span>
                                    <span class="stat-label">Date de début</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="stat-card">
                                <i class="fas fa-clock text-info"></i>
                                <div class="stat-info">
                                    <span class="stat-number">@Model.Last().CreatedDate.ToString("HH:mm")</span>
                                    <span class="stat-label">Dernière activité</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center" role="alert">
                    <i class="fas fa-info-circle fa-2x mb-3"></i>
                    <h4>Aucun historique disponible</h4>
                    <p>Cette conversation ne contient pas encore de messages.</p>
                    @if (conversationId.HasValue)
                    {
                        <a asp-action="Index" asp-route-conversationId="@conversationId" class="btn btn-primary">
                            <i class="fas fa-play"></i> Commencer à discuter
                        </a>
                    }
                </div>
            }
        </div>
    </div>
</div>

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<style>
    .chat-history-container {
        background: #f8fafc;
        border-radius: 16px;
        padding: 2rem;
        margin-bottom: 2rem;
    }

    .chat-timeline {
        position: relative;
    }

    .timeline-item {
        position: relative;
        margin-bottom: 2rem;
        padding-left: 80px;
    }

    .timeline-marker {
        position: absolute;
        left: 0;
        top: 0;
        width: 60px;
        text-align: center;
    }

    .timeline-time {
        background: #667eea;
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 12px;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .message-block {
        margin-bottom: 1rem;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: transform 0.2s ease;
    }

    .message-block:hover {
        transform: translateY(-2px);
    }

    .user-message {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
    }

    .bot-message {
        background: white;
        color: #2d3748;
        border: 1px solid #e2e8f0;
    }

    .message-header {
        display: flex;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    .bot-message .message-header {
        border-bottom: 1px solid #e2e8f0;
    }

    .message-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
        font-size: 1.2rem;
    }

    .message-avatar.user {
        background: rgba(255,255,255,0.2);
        color: white;
    }

    .message-avatar.bot {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        color: white;
    }

    .message-info {
        display: flex;
        flex-direction: column;
    }

    .message-timestamp {
        font-size: 0.75rem;
        opacity: 0.8;
    }

    .message-content {
        padding: 1rem;
        line-height: 1.6;
    }

    .conversation-stats {
        background: white;
        border-radius: 16px;
        padding: 1.5rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    .stat-card {
        display: flex;
        align-items: center;
        padding: 1rem;
        background: #f8fafc;
        border-radius: 12px;
        margin-bottom: 1rem;
    }

    .stat-card i {
        font-size: 2rem;
        margin-right: 1rem;
    }

    .stat-info {
        display: flex;
        flex-direction: column;
    }

    .stat-number {
        font-size: 1.25rem;
        font-weight: 700;
        color: #2d3748;
    }

    .stat-label {
        font-size: 0.875rem;
        color: #718096;
    }

    @media (max-width: 768px) {
        .timeline-item {
            padding-left: 0;
        }

        .timeline-marker {
            position: relative;
            width: 100%;
            margin-bottom: 1rem;
        }

        .chat-history-container {
            padding: 1rem;
        }

        .message-header {
            padding: 0.75rem;
        }

        .message-content {
            padding: 0.75rem;
        }
    }
</style>